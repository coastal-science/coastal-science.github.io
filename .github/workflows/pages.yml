# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow one concurrent deployment
concurrency:
  group: "pages"
  cancel-in-progress: true

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: [ self-hosted, rcg ]
    container:
      image: peaceiris/hugo

    env:
      HUGO_VERSION: 0.108.0
    
    steps:
# GH Actions
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.108.0"
          extended: true
          
# Ubuntu
#       - name: Install Hugo CLI
#         run: |
#           wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_Linux-64bit.deb \
#           && sudo dpkg -i ${{ runner.temp }}/hugo.deb

# RPM
#       - name: Install Hugo CLI
#         run: |
#           sudo dnf install hugo 

      - name: Pre-Build ls
        run: ls -lah

      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: true  # Fetch Hugo themes (true OR recursive) # failing on ubuntu container
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
          
#       - name: Checkout submodules
#         run: |
#           git submodule update --init --recursive --depth 1 
          
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v2
        
      - name: Build with Hugo
        env:
          # For maximum backward compatibility with Hugo modules
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
            
      - name: Post-Build ls
        run: ls -lah public/
        
      - name: Deploy 
      # uploads via a git commit to github.sfu.ca (which is not possible without credentials on server)
        uses: peaceiris/actions-gh-pages@v3
        if: github.ref == 'refs/heads/main'
        with:
          personal_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./public # default: public
          publish_branch: gh-pages # default: gh-pages
          user_name: 'github-actions[bot]'
          user_email: 'github-actions[bot]@users.noreply.github.com'
          commit_message: ${{ github.event.head_commit.message }}

#       - name: 'Tar files'
#         run: tar -cvf github-pages.tar ./public         
        
#       - name: Upload artifact
#         uses: actions/upload-artifact@v3
#         with:
#           name: github-pages
#           path: github-pages.tar
#           if-no-files-found: error
          
# #       - name: Upload Pages artifact
# #         uses: actions/upload-pages-artifact@v1
# #         with:
# #           path: ${{ github.workspace }}/public
          
#   # Deployment job
#   deploy:
#     environment:
#       name: github-pages
#       url: ${{ steps.deployment.outputs.page_url }}
#     runs-on: [ self-hosted, rcg ]
#     needs: build
#     steps:
#       - uses: actions/download-artifact@master
#         with:
#           name: github-pages
#           path: .
#       - uses: actions/configure-pages@v1
#       - name: 'UnTar files'
#         run: |
#           unzip github-pages.zip
#           tar -xvf --overwrite github-pages.tar -C ./public 
        
#       - uses: actions/upload-pages-artifact@v1
#         with:
#           path: ./public
#       - name: Deploy to GitHub Pages
#         id: deployment
#         uses: actions/deploy-pages@v1
